#### 遊戲初始化
1. 命名玩家1~4
2. 牌堆洗牌
3. 發牌到每個玩家手上,直到牌堆空 (Empty)

#### 遊戲開始
1. S11 遊戲一開始
1. S1 回合


##### S11 遊戲一開始
1. print("新的回合開始了。")
2. 找出擁有梅花3的玩家
3. print("輪到<玩家的名字>了")
4. S2 玩家出牌

	* isContainsClubThreeInFirstPlay
		是否包含梅花3
			是
				是否為合法牌型
					是
						return true
					否
						return false
			否
				return false

##### S1 回合
1. print("新的回合開始了。")
2. 找出擁有梅花3的玩家
3. print("輪到<玩家的名字>了")
4. S2 玩家出牌
5. 擁有梅花3的玩家出牌(需使用合法牌型 AND 包含 梅花3)
6. 將出的牌型設為 topPlay
7. 輪到下一位玩家 (i+1)
	1. 判斷玩家是否PASSED
		1. 是 - 跳過這個玩家 i+1 回到 步驟 7
		2. 否 - 繼續執行 步驟 8
8. print("輪到<玩家的名字>了")
9. S2 玩家出牌
10. 輪到下一位玩家重複步驟 7 ~ 9, 直到有玩家們連續喊出了三個PASS。
11. 回合結束，清空檯面上的牌意即，清空頂牌。
12. 玩家是否沒有牌了
13. S3 遊戲結束


#### S3 遊戲結束
1. print("遊戲結束，遊戲的勝利者為 <玩家的名字>")




#### S2 玩家出牌
玩家共通:
	* PASS() 行為:
	    1. 判斷PASS合不合法
		    1. 是
			    1. passedPlayers push 該玩家 id
			    2. print("玩家 <玩家的名字> PASS")
			1. 否 (備註※2)
				1. print("你不能在新的回合中喊 PASS")
				2. return Error
	* isCardPatternLegal
		與topPlay比較是否為同一種牌型
			1. 是: 合法
				是否比topPlay大
					是
						return true
					不是
						return false
			2. 不是: 不合法
				return false
		如果沒有topPlay
			是否包含梅花3
				是
					是否為合法牌型
						是
							return true
						否
							return false
				否
					return false

AI玩家:
	1. 印出牌組(備註※3)
	2. 判斷是否有合法的牌組
		loop 所有牌型清單 檢查有沒有合法
		1. 有-繼續下一動
		2. 沒有-PASS
			呼叫PASS()
	3. 抽出合法牌組(比頂牌還大且牌型同種)
	4. 隨機出合法牌組
	5. 打出的牌成為新的頂牌
	6. 輪到下一個玩家

    
人類玩家:
	1. 印出牌組(備註※3)
	2. CLI輸入遊戲行為
		1. PASS
			呼叫PASS()
			1. 合法-跳至步驟6
			2. 不合法-回到步驟6
		2. 輸入牌組, 格式參考(備註※4)
			1. 呼叫 isCardPatternLegal() 判斷出牌合法性
				true: 繼續下一步
				false:
					 1. print("此牌型不合法，請再嘗試一次。")
					 2. 返回 輸入牌型

	3. 打出的牌成為新的頂牌
	4. 輪到下一個玩家

#### P 牌型
牌型清單


備註
1. print("玩家 <玩家的名字> 打出了 <牌型名稱> <花色>[<數字>] <花色>[<數字>] <花色>[<數字>] ...")
	 - `<牌型名稱>` 為該牌型的中文名稱，可能為單張、對子、順子或是葫蘆。
	- `<牌型名稱>` 隨後接著的是牌型中包含的牌，以小到大依序由左至右排序。
2. 玩家不能在新的回合中的第一輪 PASS，此為唯一 PASS 不合法的情況。
3. 印出玩家手牌格式
	0    1    2    3    4    5    6     7 ... 
	S[3] H[4] S[4] H[6] H[7] C[8] C[10] S[k] ...
4. 玩家可以輸入一連串以空白隔開的非負整數，例如: "0 3"